<!DOCTYPE html>
<html>
<head>
  <title>Dashboard do Administrador</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="/css/bootstrap.min.css">
  <style>
    body {
      background-color: #f8f9fa;
    }
    .dashboard-header {
      margin-top: 20px;
      margin-bottom: 20px;
    }
    .dashboard-section {
      background-color: white;
      padding: 20px;
      border-radius: 10px;
      margin-bottom: 20px;
      box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
      position: relative;
      border: 2px solid transparent;
      transition: all 0.3s ease-in-out;
    }
    .dashboard-section:hover {
      border-color: #007bff;
      box-shadow: 0px 0px 15px rgba(0, 123, 255, 0.8);
    }
    @media (max-width: 768px) {
      .dashboard-section {
        padding: 15px;
        margin-bottom: 15px;
      }
    }
    .styled-table {
      background-color: white;
      border-radius: 10px;
      overflow: hidden;
      border: 2px solid transparent;
      box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
      transition: all 0.3s ease-in-out;
    }
    .styled-table th, .styled-table td {
      padding: 11px;
      border: 1px solid #dee2e6;
    }
    .styled-table thead {
      background-color: #007bff;
      color: white;
    }
    .classification-table {
      border-radius: 8px;
      overflow: hidden;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
      border: 1px solid #dee2e6;
    }
    .classification-table:hover {
      box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
      transition: all 0.3s ease;
    }
    @media (max-width: 768px) {
      .styled-table th, .styled-table td {
        padding: 8px;
        font-size: 14px;
      }
    }
    @media (max-width: 768px) {
      .hide-mobile {
        display: none !important;
      }
    }
    .btn-clear {
      padding: 0.25rem 0.5rem;
      font-size: 0.875rem;
    }
  </style>
</head>
<body>
  <!-- Navbar -->
  <nav class="navbar navbar-expand-lg navbar-dark bg-primary">
    <div class="container">
      <a class="navbar-brand" href="#">Sistema de F√©rias</a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" 
              data-bs-target="#navbarContent" aria-controls="navbarContent" 
              aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarContent">
        <ul class="navbar-nav ms-auto">
          <li class="nav-item">
            <a class="nav-link" href="/users/dashboard">In√≠cio</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/users/register">Cadastrar Usu√°rio</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/vacations/admin-form">Cadastrar F√©rias</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/vacations/calendar-options">Calend√°rio</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/auth/logout">Logout</a>
          </li>
        </ul>
      </div>
    </div>
  </nav>
  
  <!-- Conte√∫do do Dashboard -->
  <div class="container">
    <div class="dashboard-header text-center">
      <h2>Bem-vindo, <%= admin.nome %></h2>
    </div>
    
    <!-- Mensagens de feedback -->
    <div id="flash-messages">
      <% if (success_msg) { %>
        <div class="alert alert-success alert-dismissible fade" role="alert" id="success-alert" style="display: none;">
          <%= success_msg %>
          <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
      <% } %>
      <% if (error_msg) { %>
        <div class="alert alert-danger alert-dismissible fade" role="alert" id="error-alert" style="display: none;">
          <%= error_msg %>
          <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
      <% } %>
    </div>
    
    <!-- Sess√µes do Dashboard -->
    <div class="row mt-4">
      <!-- Resetar F√©rias -->
      <div class="col-12 col-md-6 col-xxl-3">
        <div class="dashboard-section">
          <h4>Resetar F√©rias</h4>
          <form action="/users/reset-vacations" method="POST">
            <div class="mb-3">
              <label for="matricula_reset" class="form-label">Matr√≠cula:</label>
              <input type="text" name="matricula" id="matricula_reset" class="form-control form-control-sm" placeholder="Digite a matr√≠cula" required maxlength="8">
            </div>
            <button type="submit" class="btn btn-warning btn-sm">Resetar</button>
          </form>
        </div>
      </div>
      <!-- Apagar Matr√≠cula -->
      <div class="col-12 col-md-6 col-xxl-3">
        <div class="dashboard-section">
          <h4>Apagar Matr√≠cula</h4>
          <form action="/users/delete-user" method="POST">
            <div class="mb-3">
              <label for="matricula_delete" class="form-label">Matr√≠cula:</label>
              <input type="text" name="matricula" id="matricula_delete" class="form-control form-control-sm" placeholder="Digite a matr√≠cula" required maxlength="8">
            </div>
            <button type="submit" class="btn btn-danger btn-sm">Apagar</button>
          </form>
        </div>
      </div>
      <!-- Configura√ß√£o de Limites -->
      <div class="col-12 col-md-6 col-xxl-3">
        <div class="dashboard-section">
          <h4>Config. Limites</h4>
          <form action="/users/update-limits" method="POST">
            <div class="row">
              <div class="col-4">
                <label for="max_ipc" class="form-label">IPC</label>
                <input type="number" name="max_ipc" id="max_ipc" value="<%= settings.max_ipc %>" class="form-control form-control-sm">
              </div>
              <div class="col-4">
                <label for="max_epc" class="form-label">EPC</label>
                <input type="number" name="max_epc" id="max_epc" value="<%= settings.max_epc %>" class="form-control form-control-sm">
              </div>
              <div class="col-4">
                <label for="max_dpc" class="form-label">DPC</label>
                <input type="number" name="max_dpc" id="max_dpc" value="<%= settings.max_dpc %>" class="form-control form-control-sm">
              </div>
            </div>
            <button type="submit" class="btn btn-primary btn-sm mt-3">Confirmar</button>
          </form>
        </div>
      </div>
      <!-- Tabela de Controle de Vagas -->
      <div class="col-12 col-md-6 col-xxl-3">
        <div class="table-responsive">
          <% 
            let totalIPC = 0, totalEPC = 0, totalDPC = 0;
            users.forEach(function(u) {
              if (u.categoria === 'IPC') totalIPC++;
              else if (u.categoria === 'EPC') totalEPC++;
              else if (u.categoria === 'DPC') totalDPC++;
            });
          %>
          <table class="table table-bordered text-center styled-table">
            <thead>
              <tr>
                <th class="equal-col">Cargo</th>
                <th class="equal-col">M√°ximo/M√™s</th>
                <th class="equal-col">Marcados</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td class="equal-col">IPC</td>
                <td class="equal-col"><%= settings.max_ipc %></td>
                <td class="equal-col"><%= totalIPC %></td>
              </tr>
              <tr>
                <td class="equal-col">EPC</td>
                <td class="equal-col"><%= settings.max_epc %></td>
                <td class="equal-col"><%= totalEPC %></td>
              </tr>
              <tr>
                <td class="equal-col">DPC</td>
                <td class="equal-col"><%= settings.max_dpc %></td>
                <td class="equal-col"><%= totalDPC %></td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
    </div>

    <!-- Filtros para a Tabela de Classifica√ß√£o -->
    <div class="container mt-4">
      <div class="row g-3">
        <!-- Filtro por M√™s -->
        <div class="col-12 col-md-6 col-lg-3">
          <label for="filter-mes" class="form-label">Filtrar por M√™s:</label>
          <div class="input-group">
            <select id="filter-mes" class="form-select form-select-sm">
              <option value="">Todos</option>
              <option value="01">Janeiro</option>
              <option value="02">Fevereiro</option>
              <option value="03">Mar√ßo</option>
              <option value="04">Abril</option>
              <option value="05">Maio</option>
              <option value="06">Junho</option>
              <option value="07">Julho</option>
              <option value="08">Agosto</option>
              <option value="09">Setembro</option>
              <option value="10">Outubro</option>
              <option value="11">Novembro</option>
              <option value="12">Dezembro</option>
            </select>
            <button class="btn btn-sm btn-outline-secondary" type="button" id="btn-filter-mes">üîç</button>
            <button class="btn btn-sm btn-outline-danger" type="button" id="btn-clear-mes">√ó</button>
          </div>
        </div>
        <!-- Filtro por Nome -->
        <div class="col-12 col-md-6 col-lg-3">
          <label for="filter-nome" class="form-label">Filtrar por Nome:</label>
          <div class="input-group">
            <input type="text" id="filter-nome" class="form-control form-select-sm" placeholder="Digite o nome">
            <button class="btn btn-sm btn-outline-secondary" type="button" id="btn-filter-nome">üîç</button>
            <button class="btn btn-sm btn-outline-danger" type="button" id="btn-clear-nome">√ó</button>
          </div>
        </div>
        <!-- Filtro por Matr√≠cula -->
        <div class="col-12 col-md-6 col-lg-3">
          <label for="filter-matricula" class="form-label">Filtrar por Matr√≠cula:</label>
          <div class="input-group">
            <input type="text" id="filter-matricula" class="form-control form-select-sm" placeholder="Digite a matr√≠cula">
            <button class="btn btn-sm btn-outline-secondary" type="button" id="btn-filter-matricula">üîç</button>
            <button class="btn btn-sm btn-outline-danger" type="button" id="btn-clear-matricula">√ó</button>
          </div>
        </div>
        <!-- Filtro por Ano -->
        <div class="col-12 col-md-6 col-lg-3">
          <label for="filter-ano" class="form-label">Filtrar por Ano:</label>
          <div class="input-group">
            <select id="filter-ano" class="form-select form-select-sm">
              <option value="">Todos</option>
              <% distinctYears.forEach(function(ano) { %>
                <option value="<%= ano %>" <%= ano == currentYear ? 'selected' : '' %>><%= ano %></option>
              <% }); %>
            </select>
            <button class="btn btn-sm btn-outline-secondary" type="button" id="btn-filter-ano">üîç</button>
            <button class="btn btn-sm btn-outline-danger" type="button" id="btn-clear-ano">√ó</button>
          </div>
        </div>
      </div>
    </div>

    <!-- Tabela de Classifica√ß√£o dos IPCs -->
    <div class="dashboard-header text-left">
      <h3>Cassifica√ß√£o dos IPCs</h3>
    </div>
    <button class="btn btn-secondary btn-sm" id="download-ipc">Download PDF</button>
    <button class="btn btn-secondary btn-sm" id="download-simplificado-ipc">Download Simplificado</button>
    <div class="table-responsive mt-4" id="ipcTableContainer">
      <table class="table classification-table" id="ipcTable">
        <thead style="background-color: #007bff; color: white;">
          <tr>
            <th>N¬∫</th>
            <th class="hide-mobile">Cargo</th>
            <th>Matr√≠cula</th>
            <th>Nome</th>
            <th class="hide-mobile">Ano</th>
            <th class="hide-mobile">Gest.</th>
            <th class="hide-mobile">Qtd. Filhos</th>
            <th class="hide-mobile">Estud.</th>
            <th class="hide-mobile">Dois Vinc.</th>
            <th class="hide-mobile">Dat. Ingresso</th>
            <th class="hide-mobile">Antig.</th>
            <th class="hide-mobile">C√¥nj. serv</th>
            <th class="hide-mobile">Dat. de Nasc.</th>
            <th class="hide-mobile">Idade</th>
            <th class="hide-mobile">P. Aq. (In√≠cio)</th>
            <th class="hide-mobile">P. Aq. (Fim)</th>
            <th>F√©rias</th>
          </tr>
        </thead>
        <tbody>
          <% ipcUsers.forEach(user => { %>
            <tr data-cargo="<%= user.categoria %>" data-ano="<%= user.ano_referencia %>" data-mes-ferias="<%= user.Vacations && user.Vacations.length > 0 ? user.Vacations.map(vac => new Date(vac.data_inicio).toISOString().split('-')[1]).join(',') : '' %>">
              <td><%= user.classificacao %></td>
              <td class="hide-mobile"><%= user.categoria %></td>
              <td><%= user.matricula %></td>
              <td><%= user.nome %></td>
              <td class="hide-mobile"><%= user.ano_referencia %></td>
              <td class="hide-mobile"><%= user.gestante ? 'Sim' : 'N√£o' %></td>
              <td class="hide-mobile"><%= user.qtd_filhos %></td>
              <td class="hide-mobile"><%= user.estudante ? 'Sim' : 'N√£o' %></td>
              <td class="hide-mobile"><%= user.doisvinculos ? 'Sim' : 'N√£o' %></td>
              <td class="hide-mobile"><%= formatDate(user.data_ingresso) %></td>
              <td class="hide-mobile"><%= user.data_ingresso_dias %></td>
              <td class="hide-mobile"><%= user.possui_conjuge ? 'Sim' : 'N√£o' %></td>
              <td class="hide-mobile"><%= formatDate(user.data_nascimento) %></td>
              <td class="hide-mobile"><%= user.data_nascimento_dias %></td>
              <td class="hide-mobile"><%= formatDate(user.periodo_aquisitivo_inicio) %></td>
              <td class="hide-mobile"><%= formatDate(user.periodo_aquisitivo_fim) %></td>
              <td>
                <% 
                  let vacationsDoAno = [];
                  if (user.Vacations) {
                    vacationsDoAno = user.Vacations.filter(vac => vac.ano_referencia === user.ano_referencia);
                  }
                %>
                <% if (vacationsDoAno.length > 0) { %>
                  <% vacationsDoAno.forEach(vacation => { %>
                    <p>üóìÔ∏è <%= new Date(vacation.data_inicio).toLocaleDateString('pt-BR') %> at√© <%= new Date(vacation.data_fim).toLocaleDateString('pt-BR') %></p>
                  <% }); %>
                <% } else { %>
                  <span class="text-muted">Nenhuma</span>
                <% } %>
              </td>
            </tr>
          <% }); %>
        </tbody>
      </table>
    </div>

    <!-- Tabela de Classifica√ß√£o dos EPCs -->
    <div class="dashboard-header text-left">
      <h3>Cassifica√ß√£o dos EPCs</h3>
      <button class="btn btn-secondary btn-sm" id="download-epc">Download PDF</button>
      <button class="btn btn-secondary btn-sm" id="download-simplificado-epc">Download Simplificado</button>
    </div>
    <div class="table-responsive mt-4" id="epcTableContainer">
      <table class="table classification-table" id="epcTable">
        <thead style="background-color: #007bff; color: white;">
          <tr>
            <th>N¬∫</th>
            <th class="hide-mobile">Cargo</th>
            <th>Matr√≠cula</th>
            <th>Nome</th>
            <th class="hide-mobile">Ano</th>
            <th class="hide-mobile">Gest.</th>
            <th class="hide-mobile">Qtd. Filhos</th>
            <th class="hide-mobile">Estud.</th>
            <th class="hide-mobile">Dois Vinc.</th>
            <th class="hide-mobile">Dat. Ingresso</th>
            <th class="hide-mobile">Antig.</th>
            <th class="hide-mobile">C√¥nj. serv</th>
            <th class="hide-mobile">Dat. de Nasc.</th>
            <th class="hide-mobile">Idade</th>
            <th class="hide-mobile">P. Aq. (In√≠cio)</th>
            <th class="hide-mobile">P. Aq. (Fim)</th>
            <th>F√©rias</th>
          </tr>
        </thead>
        <tbody>
          <% epcUsers.forEach(user => { %>
            <tr data-cargo="<%= user.categoria %>" data-ano="<%= user.ano_referencia %>" data-mes-ferias="<%= user.Vacations && user.Vacations.length > 0 ? user.Vacations.map(vac => new Date(vac.data_inicio).toISOString().split('-')[1]).join(',') : '' %>">
              <td><%= user.classificacao %></td>
              <td class="hide-mobile"><%= user.categoria %></td>
              <td><%= user.matricula %></td>
              <td><%= user.nome %></td>
              <td class="hide-mobile"><%= user.ano_referencia %></td>
              <td class="hide-mobile"><%= user.gestante ? 'Sim' : 'N√£o' %></td>
              <td class="hide-mobile"><%= user.qtd_filhos %></td>
              <td class="hide-mobile"><%= user.estudante ? 'Sim' : 'N√£o' %></td>
              <td class="hide-mobile"><%= user.doisvinculos ? 'Sim' : 'N√£o' %></td>
              <td class="hide-mobile"><%= formatDate(user.data_ingresso) %></td>
              <td class="hide-mobile"><%= user.data_ingresso_dias %></td>
              <td class="hide-mobile"><%= user.possui_conjuge ? 'Sim' : 'N√£o' %></td>
              <td class="hide-mobile"><%= formatDate(user.data_nascimento) %></td>
              <td class="hide-mobile"><%= user.data_nascimento_dias %></td>
              <td class="hide-mobile"><%= formatDate(user.periodo_aquisitivo_inicio) %></td>
              <td class="hide-mobile"><%= formatDate(user.periodo_aquisitivo_fim) %></td>
              <td>
                <% 
                  let vacationsDoAno = [];
                  if (user.Vacations) {
                    vacationsDoAno = user.Vacations.filter(vac => vac.ano_referencia === user.ano_referencia);
                  }
                %>
                <% if (vacationsDoAno.length > 0) { %>
                  <% vacationsDoAno.forEach(vacation => { %>
                    <p>üóìÔ∏è <%= new Date(vacation.data_inicio).toLocaleDateString('pt-BR') %> at√© <%= new Date(vacation.data_fim).toLocaleDateString('pt-BR') %></p>
                  <% }); %>
                <% } else { %>
                  <span class="text-muted">Nenhuma</span>
                <% } %>
              </td>
            </tr>
          <% }); %>
        </tbody>
      </table>
    </div>

    <!-- Tabela de Classifica√ß√£o dos DPCs -->
    <div class="dashboard-header text-left">
      <h3>Cassifica√ß√£o dos DPCs</h3>
      <button class="btn btn-secondary btn-sm" id="download-dpc">Download PDF</button>
      <button class="btn btn-secondary btn-sm" id="download-simplificado-dpc">Download Simplificado</button>
    </div>
    <div class="table-responsive mt-4" id="dpcTableContainer">
      <table class="table classification-table" id="dpcTable">
        <thead style="background-color: #007bff; color: white;">
          <tr>
            <th>N¬∫</th>
            <th class="hide-mobile">Cargo</th>
            <th>Matr√≠cula</th>
            <th>Nome</th>
            <th class="hide-mobile">Ano</th>
            <th class="hide-mobile">Gest.</th>
            <th class="hide-mobile">Qtd. Filhos</th>
            <th class="hide-mobile">Estud.</th>
            <th class="hide-mobile">Dois Vinc.</th>
            <th class="hide-mobile">Dat. Ingresso</th>
            <th class="hide-mobile">Antig.</th>
            <th class="hide-mobile">C√¥nj. serv</th>
            <th class="hide-mobile">Dat. de Nasc.</th>
            <th class="hide-mobile">Idade</th>
            <th class="hide-mobile">P. Aq. (In√≠cio)</th>
            <th class="hide-mobile">P. Aq. (Fim)</th>
            <th>F√©rias</th>
          </tr>
        </thead>
        <tbody>
          <% dpcUsers.forEach(user => { %>
            <tr data-cargo="<%= user.categoria %>" data-ano="<%= user.ano_referencia %>" data-mes-ferias="<%= user.Vacations && user.Vacations.length > 0 ? user.Vacations.map(vac => new Date(vac.data_inicio).toISOString().split('-')[1]).join(',') : '' %>">
              <td><%= user.classificacao %></td>
              <td class="hide-mobile"><%= user.categoria %></td>
              <td><%= user.matricula %></td>
              <td><%= user.nome %></td>
              <td class="hide-mobile"><%= user.ano_referencia %></td>
              <td class="hide-mobile"><%= user.gestante ? 'Sim' : 'N√£o' %></td>
              <td class="hide-mobile"><%= user.qtd_filhos %></td>
              <td class="hide-mobile"><%= user.estudante ? 'Sim' : 'N√£o' %></td>
              <td class="hide-mobile"><%= user.doisvinculos ? 'Sim' : 'N√£o' %></td>
              <td class="hide-mobile"><%= formatDate(user.data_ingresso) %></td>
              <td class="hide-mobile"><%= user.data_ingresso_dias %></td>
              <td class="hide-mobile"><%= user.possui_conjuge ? 'Sim' : 'N√£o' %></td>
              <td class="hide-mobile"><%= formatDate(user.data_nascimento) %></td>
              <td class="hide-mobile"><%= user.data_nascimento_dias %></td>
              <td class="hide-mobile"><%= formatDate(user.periodo_aquisitivo_inicio) %></td>
              <td class="hide-mobile"><%= formatDate(user.periodo_aquisitivo_fim) %></td>
              <td>
                <% 
                  let vacationsDoAno = [];
                  if (user.Vacations) {
                    vacationsDoAno = user.Vacations.filter(vac => vac.ano_referencia === user.ano_referencia);
                  }
                %>
                <% if (vacationsDoAno.length > 0) { %>
                  <% vacationsDoAno.forEach(vacation => { %>
                    <p>üóìÔ∏è <%= new Date(vacation.data_inicio).toLocaleDateString('pt-BR') %> at√© <%= new Date(vacation.data_fim).toLocaleDateString('pt-BR') %></p>
                  <% }); %>
                <% } else { %>
                  <span class="text-muted">Nenhuma</span>
                <% } %>
              </td>
            </tr>
          <% }); %>
        </tbody>
      </table>
    </div>
  </div>

  <!-- Bootstrap 5 JS Bundle -->
  <script src="/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.2.7/pdfmake.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.2.7/vfs_fonts.js"></script>
  
  <!-- Script para exibir alertas com fade in -->
  <script>
    document.addEventListener("DOMContentLoaded", function(){
      function showAlert(alertId) {
        const alertEl = document.getElementById(alertId);
        if (alertEl && alertEl.textContent.trim() !== "") {
          alertEl.style.display = "block";
          void alertEl.offsetWidth;
          alertEl.classList.add("show");
        }
      }
      showAlert("success-alert");
      showAlert("error-alert");
    });
  </script>
  
  <!-- Script para atualizar os campos de data final com base nos in√≠cios e na op√ß√£o selecionada -->
  <script>
    document.addEventListener("DOMContentLoaded", function() {
      function addDays(date, days) {
        const result = new Date(date);
        result.setDate(result.getDate() + days);
        return result;
      }
      function formatDate(date) {
        return date.toISOString().split("T")[0];
      }
      function updateEndDate(periodIndex, durationDays) {
        const inicioInput = document.getElementById(`periodo${periodIndex}_inicio`);
        const fimInput = document.getElementById(`periodo${periodIndex}_fim`);
        if (inicioInput.value) {
          const startDate = new Date(inicioInput.value);
          const endDate = addDays(startDate, durationDays - 1);
          fimInput.value = formatDate(endDate);
        }
      }
      function updateAllEndDates() {
        const qtd = document.getElementById('qtd_periodos').value;
        if (qtd === "1") {
          updateEndDate(1, 30);
        } else if (qtd === "2_10_20") {
          updateEndDate(1, 10);
          updateEndDate(2, 20);
        } else if (qtd === "2_15_15") {
          updateEndDate(1, 15);
          updateEndDate(2, 15);
        } else if (qtd === "2_20_10") {
          updateEndDate(1, 20);
          updateEndDate(2, 10);
        } else if (qtd === "3") {
          updateEndDate(1, 10);
          updateEndDate(2, 10);
          updateEndDate(3, 10);
        }
      }
      ['periodo1_inicio', 'periodo2_inicio', 'periodo3_inicio'].forEach(function(id) {
        const input = document.getElementById(id);
        if (input) {
          input.addEventListener("change", updateAllEndDates);
        }
      });
      document.getElementById("qtd_periodos").addEventListener("change", updateAllEndDates);
    });
  </script>
  
  <!-- Script para sele√ß√£o de data de ingresso via lista suspensa -->
  <script>
    document.addEventListener("DOMContentLoaded", function () {
      const btnSelecionarData = document.getElementById("btnSelecionarData");
      const listaDatas = document.getElementById("listaDatas");
      const inputData = document.getElementById("data_ingresso");
  
      btnSelecionarData.addEventListener("click", function () {
        listaDatas.style.display = listaDatas.style.display === "none" ? "block" : "none";
      });
  
      document.querySelectorAll(".selecionar-data").forEach(item => {
        item.addEventListener("click", function () {
          const dataBr = this.textContent.trim();
          const [dia, mes, ano] = dataBr.split("/");
          const dataIso = `${ano}-${mes}-${dia}`;
          inputData.value = dataIso;
          listaDatas.style.display = "none";
        });
      });
  
      document.addEventListener("click", function (event) {
        if (!btnSelecionarData.contains(event.target) && !listaDatas.contains(event.target)) {
          listaDatas.style.display = "none";
        }
      });
    });
  </script>
  
  <!-- Script para filtrar a tabela de servidores -->
  <script>
  document.addEventListener("DOMContentLoaded", function() {
    function applyAllFilters() {
      const filterMes = document.getElementById("filter-mes").value;
      const filterNome = document.getElementById("filter-nome").value.trim().toLowerCase();
      const filterMatricula = document.getElementById("filter-matricula").value.trim().toLowerCase();
      const filterAno = document.getElementById("filter-ano").value;
      
      const tableIds = ['ipcTable', 'epcTable', 'dpcTable'];
      tableIds.forEach(function(tableId) {
        document.querySelectorAll(`#${tableId} tbody tr`).forEach(function(row) {
          const rowMes = row.getAttribute('data-mes-ferias') || '';
          const rowAno = row.getAttribute('data-ano') || '';
          const nome = row.querySelector('td:nth-child(4)')?.textContent.toLowerCase() || '';
          const matricula = row.querySelector('td:nth-child(3)')?.textContent.toLowerCase() || '';
          
          const matchMes = !filterMes || rowMes.split(',').includes(filterMes);
          const matchNome = !filterNome || nome.includes(filterNome);
          const matchMatricula = !filterMatricula || matricula.includes(filterMatricula);
          const matchAno = !filterAno || rowAno === filterAno;
          
          row.style.display = (matchMes && matchNome && matchMatricula && matchAno) ? '' : 'none';
        });
      });
    }
    
    const filterElements = [
      document.getElementById("filter-mes"),
      document.getElementById("filter-nome"),
      document.getElementById("filter-matricula"),
      document.getElementById("filter-ano")
    ];
    filterElements.forEach(el => {
      if (el) {
        el.addEventListener('input', applyAllFilters);
        el.addEventListener('change', applyAllFilters);
      }
    });
    
    const btnFilterAno = document.getElementById("btn-filter-ano");
    if(btnFilterAno) btnFilterAno.addEventListener('click', applyAllFilters);
    
    const btnClearMes = document.getElementById("btn-clear-mes");
    const btnClearNome = document.getElementById("btn-clear-nome");
    const btnClearMatricula = document.getElementById("btn-clear-matricula");
    const btnClearAno = document.getElementById("btn-clear-ano");
    
    if(btnClearMes) {
      btnClearMes.addEventListener('click', function() {
        document.getElementById("filter-mes").value = '';
        applyAllFilters();
      });
    }
    if(btnClearNome) {
      btnClearNome.addEventListener('click', function() {
        document.getElementById("filter-nome").value = '';
        applyAllFilters();
      });
    }
    if(btnClearMatricula) {
      btnClearMatricula.addEventListener('click', function() {
        document.getElementById("filter-matricula").value = '';
        applyAllFilters();
      });
    }
    if(btnClearAno) {
      btnClearAno.addEventListener('click', function() {
        document.getElementById("filter-ano").value = '';
        applyAllFilters();
      });
    }
    
    applyAllFilters();
  });

    
   // Fun√ß√£o que converte a tabela em um array de arrays
   function getTableData(tableId) {
      var table = document.getElementById(tableId);
      var data = [];
      // Captura os cabe√ßalhos
      var headers = [];
      table.querySelectorAll("thead tr th").forEach(function(th) {
        headers.push(th.innerText.trim());
      });
      data.push(headers);
      // Captura apenas as linhas vis√≠veis do corpo da tabela
      table.querySelectorAll("tbody tr").forEach(function(tr) {
        // Utiliza getComputedStyle para garantir que pega o valor efetivo de display
        if (window.getComputedStyle(tr).display !== "none") {
          var rowData = [];
          tr.querySelectorAll("td").forEach(function(td) {
            rowData.push(td.innerText.trim());
          });
          data.push(rowData);
        }
      });
      return data;
    }


    // Fun√ß√£o para obter os filtros aplicados (ajuste conforme os IDs dos seus inputs)
    function getAppliedFilters() {
      var filters = [];
      var filterMes = document.getElementById("filter-mes").value;
      var filterNome = document.getElementById("filter-nome").value;
      var filterMatricula = document.getElementById("filter-matricula").value;
      var filterAno = document.getElementById("filter-ano").value;
      if (filterMes) filters.push("M√™s: " + filterMes);
      if (filterNome) filters.push("Nome: " + filterNome);
      if (filterMatricula) filters.push("Matr√≠cula: " + filterMatricula);
      if (filterAno) filters.push("Ano: " + filterAno);
      return filters.length ? filters.join(" | ") : "Sem filtros aplicados";
    }

    // Fun√ß√£o para gerar e baixar o PDF para uma tabela espec√≠fica
    function downloadPDF(tableId, title, filename) {
    var tableData = getTableData(tableId);
    var filters = getAppliedFilters();
    var docDefinition = {
      pageSize: 'A4',
      pageOrientation: 'landscape',
      pageMargins: [20, 30, 10, 20],
      header: {
        text: title + " - " + filters,
        margin: [20, 20, 10, 0],
        fontSize: 8
      },
      content: [
        {
          table: {
            headerRows: 1,
            widths: [
              25,   // N¬∫
              30,   // Cargo
              50,  // Matr√≠cula
              50,  // Nome
              30,   // Ano
              30,   // Gest.
              30,  // Qtd. Filhos
              30,   // Estud.
              30,  // Dois Vinc.
              60,  // Dat. Ingresso
              35,  // Antig.
              30,  // C√¥nj. serv
              55,  // Dat. de Nasc.
              30,   // Idade
              55,  // P. Aq. (In√≠cio)
              55,  // P. Aq. (Fim)
              '*'   // F√©rias
            ],
            body: tableData
          },
          layout: {
            paddingLeft: function(i, node) { return 2; },
            paddingRight: function(i, node) { return 2; },
            paddingTop: function(i, node) { return 1; },
            paddingBottom: function(i, node) { return 1; }
          }
        }
      ],
      defaultStyle: {
        fontSize: 10
      }
    };
    pdfMake.createPdf(docDefinition).download(filename);
  }

  // Eventos para os bot√µes de download
  document.getElementById("download-ipc").addEventListener("click", function(){
    downloadPDF("ipcTable", "Classifica√ß√£o dos IPCs", "classificacao_IPC.pdf");
  });
  document.getElementById("download-epc").addEventListener("click", function(){
    downloadPDF("epcTable", "Classifica√ß√£o dos EPCs", "classificacao_EPC.pdf");
  });
  document.getElementById("download-dpc").addEventListener("click", function(){
    downloadPDF("dpcTable", "Classifica√ß√£o dos DPCs", "classificacao_DPC.pdf");
  });




  function getSimplifiedTableData(tableId) {
  var table = document.getElementById(tableId);
  var data = [];
  
  // Extrai somente os cabe√ßalhos relevantes
  var headers = [];
  table.querySelectorAll("thead tr th").forEach(function(th, index) {
    // Se o √≠ndice for 0, 2, 3 ou o √∫ltimo (√∫ltimo √≠ndice = total - 1)
    if (index === 0 || index === 2 || index === 3 || index === table.querySelectorAll("thead tr th").length - 1) {
      headers.push(th.innerText.trim());
    }
  });
  data.push(headers);
  
  // Extrai as linhas do corpo, considerando somente as linhas vis√≠veis
  table.querySelectorAll("tbody tr").forEach(function(tr) {
    if (window.getComputedStyle(tr).display !== "none") {
      var rowData = [];
      var tds = tr.querySelectorAll("td");
      tds.forEach(function(td, index) {
        if (index === 0 || index === 2 || index === 3 || index === tds.length - 1) {
          rowData.push(td.innerText.trim());
        }
      });
      data.push(rowData);
    }
  });
  
  return data;
}


function downloadSimplifiedPDF(tableId, title, filename) {
  var tableData = getSimplifiedTableData(tableId);
  var filters = getAppliedFilters(); // Supondo que voc√™ j√° tem essa fun√ß√£o definida para ler os filtros aplicados
  var docDefinition = {
    pageSize: 'A4',
    pageOrientation: 'portrait',
    pageMargins: [40, 40, 20, 20],
    header: {
      text: title + " - " + filters,
      margin: [10, 10, 10, 0],
      fontSize: 8
    },
    content: [
      {
        table: {
          headerRows: 1,
          
          widths: [
              25,   // N¬∫
              
              70,  // Matr√≠cula
              70,  // Nome
              
              100   // F√©rias
            ],
          body: tableData
        },
        layout: {
          paddingLeft: function(i, node) { return 2; },
          paddingRight: function(i, node) { return 2; },
          paddingTop: function(i, node) { return 1; },
          paddingBottom: function(i, node) { return 1; }
        }
      }
    ],
    defaultStyle: {
      fontSize: 10
    }
  };
  pdfMake.createPdf(docDefinition).download(filename);
}

  document.getElementById("download-simplificado-ipc").addEventListener("click", function(){
    downloadSimplifiedPDF("ipcTable", "Classifica√ß√£o Simplificada dos IPCs", "classificacao_simplificada_IPC.pdf");
  });

  document.getElementById("download-simplificado-epc").addEventListener("click", function(){
    downloadSimplifiedPDF("epcTable", "Classifica√ß√£o Simplificada dos EPCs", "classificacao_simplificada_EPC.pdf");
  });

  document.getElementById("download-simplificado-dpc").addEventListener("click", function(){
    downloadSimplifiedPDF("dpcTable", "Classifica√ß√£o Simplificada dos DPCs", "classificacao_simplificada_DPC.pdf");
  });

  </script>
</body>
</html>
