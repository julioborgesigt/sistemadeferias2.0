<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Cadastro de Usuário</title>
  <link rel="stylesheet" href="/css/bootstrap.min.css">
  <link href="/css/bootstrap-icons.css" rel="stylesheet">
  <link href="/css/styles.css" rel="stylesheet">
  <style>
    .btn-group .btn.active {
      background-color: #007bff !important;
      color: white !important;
    }
    .custom-container {
    max-width: 900px;
    margin: 0 auto;
  }
  
  </style>
</head>
<body>

  <!-- NavBar -->
  <nav class="navbar navbar-dark bg-primary">
    <div class="container" style="max-width: 1400px;">
      <a class="navbar-brand" href="#">Sistema de Férias</a>
      <button class="navbar-toggler" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasNavbar" aria-controls="offcanvasNavbar" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>

      <div class="offcanvas offcanvas-start" tabindex="-1" id="offcanvasNavbar" aria-labelledby="offcanvasNavbarLabel">
        <div class="offcanvas-header">
          <h5 class="offcanvas-title" id="offcanvasNavbarLabel">Menu</h5>
          <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
        </div>

        <div class="offcanvas-body">
          <ul class="navbar-nav justify-content-end flex-grow-1 pe-3">
            <li class="nav-item">
              <a class="nav-link" href="/users/dashboard"><i class="bi bi-house-door-fill me-2"></i>Início</a>
            </li>
           
            <li class="nav-item">
              <a class="nav-link" href="/auth/logout"><i class="bi bi-box-arrow-right me-2"></i>Logout</a>
            </li>
          </ul>
        </div>
      </div>
    </div>
  </nav>

  <div class="container custom-container mt-4">
    <div class="card shadow-sm">
      <div class="card-body">
    <h2 class="text-center">Cadastro de Usuário</h2>

      <!-- Toast Container -->
      <%
      const successMessage = Array.isArray(success_msg) ? success_msg[0] : success_msg;
      const errorMessage = Array.isArray(error_msg) ? error_msg[0] : error_msg;
      %>
  
      <% if (successMessage && successMessage.trim()) { %>
      <div class="toast-container position-fixed top-0 end-0 p-3" style="z-index: 9999">
        <div class="toast toast-progress toast-success border-0 show" role="alert" aria-live="assertive" aria-atomic="true">
          <div class="d-flex">
            <div class="toast-body"><%= successMessage %></div>
            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Fechar"></button>
          </div>
          <div class="toast-progress-bar"></div>
        </div>
      </div>
      <% } %>
  
      <% if (errorMessage && errorMessage.trim()) { %>
      <div class="toast-container position-fixed top-0 end-0 p-3" style="z-index: 9999">
        <div class="toast toast-progress toast-error border-0 show" role="alert" aria-live="assertive" aria-atomic="true">
          <div class="d-flex">
            <div class="toast-body"><%= errorMessage %></div>
            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Fechar"></button>
          </div>
          <div class="toast-progress-bar"></div>
        </div>
      </div>
      <% } %>
  
    

    <form action="/users/register" method="POST">
      <div class="row">
        <div class="col-md-6 mb-3">
          <label>Matrícula:</label>
          <input type="text" name="matricula" id="matricula" class="form-control" required maxlength="8" oninput="this.value = this.value.slice(0, 8);">
        </div>

        <div class="col-md-6 mb-3">
          <label>Nome:</label>
          <input type="text" name="nome" class="form-control" required maxlength="8">
        </div>
      </div>

      <!-- Ano de Referência -->
      <div class="mb-3">
        <label>Ano de Referência:</label>
        <div class="btn-group w-100" role="group">
          <button type="button" class="btn btn-outline-primary" id="btn-ano-anteriormenosum"></button>
          <button type="button" class="btn btn-outline-primary" id="btn-ano-anterior"></button>
          <button type="button" class="btn btn-outline-primary active" id="btn-ano-atual"></button>
        </div>
        <input type="hidden" name="ano_referencia" id="ano_referencia">
      </div>

      <div class="row g-3">
        <!-- Campo Categoria -->
        <div class="col-12 col-md-6">
          <label>Categoria:</label>
            <select name="categoria" class="form-select" required>
              <option value="IPC">IPC</option>
              <option value="IPC-P">IPC-P</option>
              <option value="EPC">EPC</option>
              <option value="EPC-P">EPC-P</option>
              <option value="DPC">DPC</option>
              <option value="DPC-P">DPC-P</option>
            </select>

        </div>
        <!-- Campo Quantidade de Filhos -->
        <div class="col-12 col-md-6">
          <label for="qtd_filhos" class="form-label">Quantidade de filhos em idade escolar:</label>
          <input type="number" name="qtd_filhos" id="qtd_filhos" class="form-control">
        </div>
      </div>
      

      <!-- Linha 1: "Está gestante?" e "Possui dois vínculos com o mesmo período desejado?" -->
      <div class="row g-3 mb-3 mt-2">
        <div class="col-12 col-md-6">
          <div class="form-check">
            <input type="checkbox" name="gestante" class="form-check-input" id="gestante">
            <label for="gestante" class="form-check-label">Está gestante?</label>
          </div>
        </div>
        <div class="col-12 col-md-6">
          <div class="form-check">
            <input type="checkbox" name="doisvinculos" class="form-check-input" id="doisvinculos">
            <label for="doisvinculos" class="form-check-label">Possui dois vínculos com o mesmo período desejado?</label>
          </div>
        </div>
      </div>

      <!-- Linha 2: "É estudante de nível técnico ou superior?" e "Possui cônjuge servidor público do Ceará?" -->
      <div class="row g-3 mb-3">
        <div class="col-12 col-md-6">
          <div class="form-check">
            <input type="checkbox" name="estudante" class="form-check-input" id="estudante">
            <label for="estudante" class="form-check-label">É estudante de nível técnico ou superior?</label>
          </div>
        </div>
        <div class="col-12 col-md-6">
          <div class="form-check">
            <input type="checkbox" name="possui_conjuge" class="form-check-input" id="possui_conjuge">
            <label for="possui_conjuge" class="form-check-label">Possui cônjuge servidor público do Ceará?</label>
          </div>
        </div>
      </div>

      <div class="row">
        <div class="col-md-6 mb-3">
          <label>Data de ingresso:</label>
          <div class="input-group">
            <input type="date" name="data_ingresso" id="data_ingresso" class="form-control" required>
            <button type="button" class="btn btn-secondary" id="btnSelecionarData">Selecionar Data</button>
          </div>
          <ul id="listaDatas" class="list-group mt-2" style="display: none; position: absolute; z-index: 10;">
            <% distinctDates.forEach(dateObj => { %>
              <li class="list-group-item list-group-item-action selecionar-data" style="cursor: pointer;">
                <%= new Date(dateObj.data_ingresso).toLocaleDateString('pt-BR') %>
              </li>
            <% }); %>
          </ul>
        </div>
        
        <div class="col-md-6 mb-3">
          <label>Data de nascimento:</label>
          <input type="date" name="data_nascimento" class="form-control" required>
        </div>
      </div>

      

      <div class="row">
        <div class="col-md-6 mb-3">
          <label>Período aquisitivo - Início:</label>
          <input type="date" name="periodo_aquisitivo_inicio" id="periodo_aquisitivo_inicio" class="form-control" required>
        </div>
        <div class="col-md-6 mb-3">
          <label>Período aquisitivo - Fim:</label>
          <input type="date" name="periodo_aquisitivo_fim" id="periodo_aquisitivo_fim" class="form-control" required>
        </div>
      </div>

      <button type="submit" class="btn btn-primary w-100">Cadastrar Usuário</button>
    </form>
      </div>
    </div>
  </div>

  <script src="/js/bootstrap.bundle.min.js"></script>
  <script>
    document.addEventListener("DOMContentLoaded", function() {
      const anoAtual = new Date().getFullYear();
      const anoAnterior = anoAtual - 1;
      const anoAnteriorMenosUm = anoAtual - 2;
      const btnAnoAnteriorMenosUm = document.getElementById("btn-ano-anteriormenosum");
      const btnAnoAnterior = document.getElementById("btn-ano-anterior");
      const btnAnoAtual = document.getElementById("btn-ano-atual");
      const anoReferenciaInput = document.getElementById("ano_referencia");
      const dataIngressoInput = document.getElementById("data_ingresso");
      const periodoInicioInput = document.getElementById("periodo_aquisitivo_inicio");
      const periodoFimInput = document.getElementById("periodo_aquisitivo_fim");

      btnAnoAnteriorMenosUm.textContent = anoAnteriorMenosUm;
      btnAnoAnterior.textContent = anoAnterior;
      btnAnoAtual.textContent = anoAtual;
      anoReferenciaInput.value = anoAtual;

      btnAnoAnteriorMenosUm.addEventListener("click", function() {
        anoReferenciaInput.value = anoAnteriorMenosUm;
        btnAnoAnteriorMenosUm.classList.add("active");
        btnAnoAnterior.classList.remove("active");
        btnAnoAtual.classList.remove("active");
        calcularPeriodoAquisitivo();
      });

      btnAnoAnterior.addEventListener("click", function() {
        anoReferenciaInput.value = anoAnterior;
        btnAnoAnteriorMenosUm.classList.remove("active");
        btnAnoAnterior.classList.add("active");
        btnAnoAtual.classList.remove("active");
        calcularPeriodoAquisitivo();
      });

      btnAnoAtual.addEventListener("click", function() {
        anoReferenciaInput.value = anoAtual;
        btnAnoAnteriorMenosUm.classList.remove("active");
        btnAnoAnterior.classList.remove("active");
        btnAnoAtual.classList.add("active");
        calcularPeriodoAquisitivo();
      });

      function calcularPeriodoAquisitivo() {
        const dataIngresso = dataIngressoInput.value;
        const anoBase = parseInt(anoReferenciaInput.value);

        if (!dataIngresso || !anoBase) return;

        const inicio = new Date(dataIngresso);
        inicio.setFullYear(anoBase);
        const fim = new Date(inicio);
        fim.setFullYear(fim.getFullYear() + 1);
        fim.setDate(fim.getDate() - 1);

        periodoInicioInput.value = inicio.toISOString().split("T")[0];
        periodoFimInput.value = fim.toISOString().split("T")[0];
      }

      dataIngressoInput.addEventListener("change", calcularPeriodoAquisitivo);
    });
  </script>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const btnSelecionarData = document.getElementById("btnSelecionarData");
    const listaDatas = document.getElementById("listaDatas");
    const inputData = document.getElementById("data_ingresso");

    // Mostra ou esconde a lista de datas ao clicar no botão
    btnSelecionarData.addEventListener("click", function () {
      listaDatas.style.display = listaDatas.style.display === "none" ? "block" : "none";
    });

    // Adiciona evento para selecionar uma data e preencher o campo corretamente
    document.querySelectorAll(".selecionar-data").forEach(item => {
      item.addEventListener("click", function () {
        const dataBr = this.textContent.trim(); // Ex: "15/08/2023"
        
        // Converte para o formato YYYY-MM-DD exigido pelo input date
        const [dia, mes, ano] = dataBr.split("/");
        const dataIso = `${ano}-${mes}-${dia}`;

        inputData.value = dataIso; // Define a data no campo
        listaDatas.style.display = "none"; // Esconde a lista após a seleção
      });
    });

    // Fecha a lista ao clicar fora dela
    document.addEventListener("click", function (event) {
      if (!btnSelecionarData.contains(event.target) && !listaDatas.contains(event.target)) {
        listaDatas.style.display = "none";
      }
    });
  });
</script>

<script>
  window.onload = function () {
    const toastElements = document.querySelectorAll('.toast.toast-progress');
  
    toastElements.forEach(toast => {
      const progressBar = toast.querySelector('.toast-progress-bar');
      const closeBtn = toast.querySelector('.btn-close');
      const duration = 3000;
  
      if (progressBar) {
        progressBar.style.width = '100%';
        progressBar.style.transition = `width ${duration}ms linear`;
        setTimeout(() => {
          progressBar.style.width = '0%';
        }, 100);
      }
  
      const timeout = setTimeout(() => {
        toast.classList.remove('show');
        toast.remove();
      }, duration);
  
      if (closeBtn) {
        closeBtn.addEventListener('click', () => {
          clearTimeout(timeout);
          toast.classList.remove('show');
          toast.remove();
        });
      }
    });
  };
  </script>

<!-- Arquivo de scripts customizados -->
<script src="/js/scripts.js"></script>
</body>
</html>
