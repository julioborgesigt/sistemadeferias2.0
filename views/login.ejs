<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Login - Administrador</title>
  <link rel="stylesheet" href="/css/bootstrap.min.css">
  <link href="/css/styles.css" rel="stylesheet">
  <style>
    body {
      display: flex;
      justify-content: center;
      align-items: center;
      min-height: 100vh;
      margin: 0;
      background-color: #f8f9fa;
    }
  
    .login-container {
      position: relative;
      max-width: 300px;
      width: 100%;
      padding: 20px;
      background-color: #fff;
      border-radius: 12px;
      box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);
      overflow: visible;
    }
  
    /* Elementos decorativos */
    .decor-top-right,
    .decor-bottom-left {
      position: absolute;
      width: 60px;
      height: 60px;
      border: 2px dotted #007bff;
      z-index: 0;
    }
  
    .decor-top-right {
      top: -10px;
      right: -10px;
      border-left: none;
      border-bottom: none;
      border-top-right-radius: 12px;
    }
  
    .decor-top-right.second {
      top: -20px;
      right: -20px; /* 60px de largura + 10px de margem */
      opacity: 0.6;
      border-width: 2px;
    }
  
    .decor-bottom-left {
      bottom: -10px;
      left: -10px;
      border-right: none;
      border-top: none;
      border-bottom-left-radius: 12px;
    }
  
    .decor-bottom-left.second {
      bottom: -20px;
      left: -20px; /* 60px de largura + 10px de margem */
      opacity: 0.6;
      border-width: 2px;
    }
  
    .login-container > *:not(.decor-top-right):not(.decor-bottom-left) {
      position: relative;
      z-index: 1;
    }

  
  </style>
  
</head>
<body>
  <div class="login-container">
    <!-- Elementos decorativos -->
    <div class="decor-top-right"></div>
    <div class="decor-top-right second"></div>
    <div class="decor-bottom-left"></div>
    <div class="decor-bottom-left second"></div>

    <h2 class="text-center mb-4">Administrador</h2>

    <!-- Toast Container -->
    <%
    const successMessage = Array.isArray(success_msg) ? success_msg[0] : success_msg;
    const errorMessage = Array.isArray(error_msg) ? error_msg[0] : error_msg;
    %>

    <% if (successMessage && successMessage.trim()) { %>
    <div class="toast-container position-fixed top-0 end-0 p-3" style="z-index: 9999">
      <div class="toast toast-progress toast-success border-0 show" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="d-flex">
          <div class="toast-body"><%= successMessage %></div>
          <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Fechar"></button>
        </div>
        <div class="toast-progress-bar"></div>
      </div>
    </div>
    <% } %>

    <% if (errorMessage && errorMessage.trim()) { %>
    <div class="toast-container position-fixed top-0 end-0 p-3" style="z-index: 9999">
      <div class="toast toast-progress toast-error border-0 show" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="d-flex">
          <div class="toast-body"><%= errorMessage %></div>
          <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Fechar"></button>
        </div>
        <div class="toast-progress-bar"></div>
      </div>
    </div>
    <% } %>





    <form action="/auth/login" method="POST">
      <div class="mb-3">
        <label>Email:</label>
        <input type="email" name="email" class="form-control" required>
      </div>
      <div class="mb-3">
        <label>Senha:</label>
        <input type="password" name="password" class="form-control" required>
      </div>
      <div class="mt-3">
        <button type="submit" class="btn btn-primary w-100">Entrar</button>
      </div>
    </form>
  </div>

  <script>
    window.onload = function () {
      const toastElements = document.querySelectorAll('.toast.toast-progress');
    
      toastElements.forEach(toast => {
        const progressBar = toast.querySelector('.toast-progress-bar');
        const closeBtn = toast.querySelector('.btn-close');
        const duration = 3000;
    
        if (progressBar) {
          progressBar.style.width = '100%';
          progressBar.style.transition = `width ${duration}ms linear`;
          setTimeout(() => {
            progressBar.style.width = '0%';
          }, 100);
        }
    
        const timeout = setTimeout(() => {
          toast.classList.remove('show');
          toast.remove();
        }, duration);
    
        if (closeBtn) {
          closeBtn.addEventListener('click', () => {
            clearTimeout(timeout);
            toast.classList.remove('show');
            toast.remove();
          });
        }
      });
    };
    </script>

  <script src="/js/bootstrap.bundle.min.js"></script>
</body>
</html>
