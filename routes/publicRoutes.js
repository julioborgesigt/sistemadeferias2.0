// routes/publicRoutes.js
const express = require('express');
const router = express.Router();
const db = require('../models');
const User = db.User;
const Vacation = db.Vacation;

// Rota para exibir o formul√°rio de acesso do usu√°rio
router.get('/', (req, res) => {
  res.render('userLogin');
});

// Rota para processar o acesso do usu√°rio
router.post('/', async (req, res) => {
  const { matricula } = req.body;
  try {
    console.log(`üîç Tentativa de login com matr√≠cula: ${matricula}`);

    // Busca o usu√°rio com a matr√≠cula informada
    const user = await User.findOne({ where: { matricula } });
    if (!user) {
      console.log('‚ö†Ô∏è Usu√°rio n√£o encontrado.');
      req.flash('error_msg', 'Usu√°rio n√£o encontrado.');
      return res.redirect('/user');
    }
    console.log(`‚úÖ Usu√°rio encontrado: ${user.matricula}, Classifica√ß√£o: ${user.classificacao}`);

    // Verifica se o usu√°rio j√° marcou f√©rias
    const userVacations = await Vacation.findAll({ where: { matricula } });
    if (userVacations.length > 0) {
      console.log('‚ö†Ô∏è Usu√°rio j√° marcou f√©rias.');
      req.flash('error_msg', 'Voc√™ j√° marcou suas f√©rias.');
      return res.redirect('/user');
    }

    const userWithVacations = await User.findOne({
      include: [{
        model: Vacation,
        required: false,
      }],
      where: { matricula: '11111111' }, // Insira a matr√≠cula de um usu√°rio para testar
    });
    console.log("00000000000000000000000001222222222222222222222222");
    console.log(userWithVacations);


  // Buscar o pr√≥ximo usu√°rio na fila (sem f√©rias marcadas e com melhor classifica√ß√£o)
  const { Op } = require('sequelize');
  const pendingUser = await User.findOne({
    where: {
      matricula: {
        [Op.notIn]: db.sequelize.literal('(SELECT matricula FROM Vacations)')
      },
      categoria: user.categoria // Filtro por categoria
    },
    order: [['classificacao', 'ASC']],
    attributes: ['matricula', 'classificacao', 'categoria'], // Incluir categoria
  });


    



    if (!pendingUser) {
      console.log('‚ö†Ô∏è Nenhum usu√°rio pendente para marca√ß√£o de f√©rias.');
      req.flash('error_msg', 'Nenhum usu√°rio pendente de marca√ß√£o.');
      return res.redirect('/user');
    }

    console.log(`üìù Usu√°rio com melhor classifica√ß√£o pendente: ${pendingUser.matricula}`);
    console.log(`üîé Usu√°rio pendente encontrado: ${pendingUser?.matricula}`);

    // Se a matr√≠cula n√£o for a do usu√°rio que tem a melhor posi√ß√£o na fila, bloquear o acesso
    if (pendingUser.matricula !== matricula) {
      console.log(`‚õî A matr√≠cula ${matricula} (${user.categoria}) tentou acessar. A vez √© do ${pendingUser.categoria} ${pendingUser.matricula}.`);
      req.flash('error_msg', `Ainda n√£o √© sua vez na categoria ${user.categoria}. A vez √© do usu√°rio ${pendingUser.matricula}.`);
      return res.redirect('/user');
    }

    console.log(`‚úÖ Usu√°rio autorizado para marca√ß√£o de f√©rias: ${matricula}`);
    res.redirect(`/vacations/form?matricula=${matricula}`);
  } catch (error) {
    console.error('‚ùå ERRO AO PROCESSAR LOGIN:', error);
    req.flash('error_msg', 'Erro ao tentar acessar a marca√ß√£o.');
    return res.redirect('/user');
  }
});

module.exports = router;
